<?php

namespace Proxies\__CG__\Webbook\MainBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class BookBlock extends \Webbook\MainBundle\Entity\BookBlock implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Webbook\\MainBundle\\Entity\\BookBlock' . "\0" . 'id', '' . "\0" . 'Webbook\\MainBundle\\Entity\\BookBlock' . "\0" . 'book', '' . "\0" . 'Webbook\\MainBundle\\Entity\\BookBlock' . "\0" . 'parent', '' . "\0" . 'Webbook\\MainBundle\\Entity\\BookBlock' . "\0" . 'childrens', '' . "\0" . 'Webbook\\MainBundle\\Entity\\BookBlock' . "\0" . 'title', '' . "\0" . 'Webbook\\MainBundle\\Entity\\BookBlock' . "\0" . 'level', '' . "\0" . 'Webbook\\MainBundle\\Entity\\BookBlock' . "\0" . 'position', '' . "\0" . 'Webbook\\MainBundle\\Entity\\BookBlock' . "\0" . 'token', '' . "\0" . 'Webbook\\MainBundle\\Entity\\BookBlock' . "\0" . 'authorizations', '' . "\0" . 'Webbook\\MainBundle\\Entity\\BookBlock' . "\0" . 'versions', '' . "\0" . 'Webbook\\MainBundle\\Entity\\BookBlock' . "\0" . 'options', '' . "\0" . 'Webbook\\MainBundle\\Entity\\BookBlock' . "\0" . 'historics', 'createdBy', 'updatedBy', 'deletedBy', 'createdAt', 'updatedAt'];
        }

        return ['__isInitialized__', '' . "\0" . 'Webbook\\MainBundle\\Entity\\BookBlock' . "\0" . 'id', '' . "\0" . 'Webbook\\MainBundle\\Entity\\BookBlock' . "\0" . 'book', '' . "\0" . 'Webbook\\MainBundle\\Entity\\BookBlock' . "\0" . 'parent', '' . "\0" . 'Webbook\\MainBundle\\Entity\\BookBlock' . "\0" . 'childrens', '' . "\0" . 'Webbook\\MainBundle\\Entity\\BookBlock' . "\0" . 'title', '' . "\0" . 'Webbook\\MainBundle\\Entity\\BookBlock' . "\0" . 'level', '' . "\0" . 'Webbook\\MainBundle\\Entity\\BookBlock' . "\0" . 'position', '' . "\0" . 'Webbook\\MainBundle\\Entity\\BookBlock' . "\0" . 'token', '' . "\0" . 'Webbook\\MainBundle\\Entity\\BookBlock' . "\0" . 'authorizations', '' . "\0" . 'Webbook\\MainBundle\\Entity\\BookBlock' . "\0" . 'versions', '' . "\0" . 'Webbook\\MainBundle\\Entity\\BookBlock' . "\0" . 'options', '' . "\0" . 'Webbook\\MainBundle\\Entity\\BookBlock' . "\0" . 'historics', 'createdBy', 'updatedBy', 'deletedBy', 'createdAt', 'updatedAt'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (BookBlock $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setToken($token)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setToken', [$token]);

        return parent::setToken($token);
    }

    /**
     * {@inheritDoc}
     */
    public function getToken()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getToken', []);

        return parent::getToken();
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function getParent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getParent', []);

        return parent::getParent();
    }

    /**
     * {@inheritDoc}
     */
    public function setParent($parent)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setParent', [$parent]);

        return parent::setParent($parent);
    }

    /**
     * {@inheritDoc}
     */
    public function getChildrens()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getChildrens', []);

        return parent::getChildrens();
    }

    /**
     * {@inheritDoc}
     */
    public function setChildrens($childrens)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setChildrens', [$childrens]);

        return parent::setChildrens($childrens);
    }

    /**
     * {@inheritDoc}
     */
    public function addChild($child)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addChild', [$child]);

        return parent::addChild($child);
    }

    /**
     * {@inheritDoc}
     */
    public function removeChild($child)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeChild', [$child]);

        return parent::removeChild($child);
    }

    /**
     * {@inheritDoc}
     */
    public function getTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitle', []);

        return parent::getTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitle($title)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitle', [$title]);

        return parent::setTitle($title);
    }

    /**
     * {@inheritDoc}
     */
    public function getBook()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBook', []);

        return parent::getBook();
    }

    /**
     * {@inheritDoc}
     */
    public function setBook($book)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBook', [$book]);

        return parent::setBook($book);
    }

    /**
     * {@inheritDoc}
     */
    public function getLevel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLevel', []);

        return parent::getLevel();
    }

    /**
     * {@inheritDoc}
     */
    public function setLevel($level)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLevel', [$level]);

        return parent::setLevel($level);
    }

    /**
     * {@inheritDoc}
     */
    public function getVersions()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVersions', []);

        return parent::getVersions();
    }

    /**
     * {@inheritDoc}
     */
    public function setVersion($versions)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVersion', [$versions]);

        return parent::setVersion($versions);
    }

    /**
     * {@inheritDoc}
     */
    public function addVersions($version)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addVersions', [$version]);

        return parent::addVersions($version);
    }

    /**
     * {@inheritDoc}
     */
    public function getAuthorizations()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAuthorizations', []);

        return parent::getAuthorizations();
    }

    /**
     * {@inheritDoc}
     */
    public function setAuthorizations($authorizations)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAuthorizations', [$authorizations]);

        return parent::setAuthorizations($authorizations);
    }

    /**
     * {@inheritDoc}
     */
    public function addAuthorization($authorization)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addAuthorization', [$authorization]);

        return parent::addAuthorization($authorization);
    }

    /**
     * {@inheritDoc}
     */
    public function removeAuthorization(\Webbook\MainBundle\Entity\Authorization $authorization)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeAuthorization', [$authorization]);

        return parent::removeAuthorization($authorization);
    }

    /**
     * {@inheritDoc}
     */
    public function getPosition()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPosition', []);

        return parent::getPosition();
    }

    /**
     * {@inheritDoc}
     */
    public function setPosition($position)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPosition', [$position]);

        return parent::setPosition($position);
    }

    /**
     * {@inheritDoc}
     */
    public function getPublishedVersion()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPublishedVersion', []);

        return parent::getPublishedVersion();
    }

    /**
     * {@inheritDoc}
     */
    public function getLastValidatedVersion()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastValidatedVersion', []);

        return parent::getLastValidatedVersion();
    }

    /**
     * {@inheritDoc}
     */
    public function getOptions()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOptions', []);

        return parent::getOptions();
    }

    /**
     * {@inheritDoc}
     */
    public function setOptions($options)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOptions', [$options]);

        return parent::setOptions($options);
    }

    /**
     * {@inheritDoc}
     */
    public function updateLevel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'updateLevel', []);

        return parent::updateLevel();
    }

    /**
     * {@inheritDoc}
     */
    public function maxDeep()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'maxDeep', []);

        return parent::maxDeep();
    }

    /**
     * {@inheritDoc}
     */
    public function array_depth($blocks)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'array_depth', [$blocks]);

        return parent::array_depth($blocks);
    }

    /**
     * {@inheritDoc}
     */
    public function getHistorics()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHistorics', []);

        return parent::getHistorics();
    }

    /**
     * {@inheritDoc}
     */
    public function setHistorics($historics)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHistorics', [$historics]);

        return parent::setHistorics($historics);
    }

    /**
     * {@inheritDoc}
     */
    public function addHistoric(\Webbook\MainBundle\Entity\BlockHistoric $blockHistoric)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addHistoric', [$blockHistoric]);

        return parent::addHistoric($blockHistoric);
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', [$id]);

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function childrenLength()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'childrenLength', []);

        return parent::childrenLength();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedBy($user)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedBy', [$user]);

        return parent::setCreatedBy($user);
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedBy($user)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedBy', [$user]);

        return parent::setUpdatedBy($user);
    }

    /**
     * {@inheritDoc}
     */
    public function setDeletedBy($user)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDeletedBy', [$user]);

        return parent::setDeletedBy($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedBy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedBy', []);

        return parent::getCreatedBy();
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedBy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedBy', []);

        return parent::getUpdatedBy();
    }

    /**
     * {@inheritDoc}
     */
    public function getDeletedBy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDeletedBy', []);

        return parent::getDeletedBy();
    }

    /**
     * {@inheritDoc}
     */
    public function isBlameable()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isBlameable', []);

        return parent::isBlameable();
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', []);

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedAt', []);

        return parent::getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt(\DateTime $createdAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', [$createdAt]);

        return parent::setCreatedAt($createdAt);
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedAt(\DateTime $updatedAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedAt', [$updatedAt]);

        return parent::setUpdatedAt($updatedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function updateTimestamps()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'updateTimestamps', []);

        return parent::updateTimestamps();
    }

}
