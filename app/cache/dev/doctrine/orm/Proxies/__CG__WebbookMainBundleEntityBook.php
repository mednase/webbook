<?php

namespace Proxies\__CG__\Webbook\MainBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Book extends \Webbook\MainBundle\Entity\Book implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Webbook\\MainBundle\\Entity\\Book' . "\0" . 'id', '' . "\0" . 'Webbook\\MainBundle\\Entity\\Book' . "\0" . 'title', '' . "\0" . 'Webbook\\MainBundle\\Entity\\Book' . "\0" . 'token', '' . "\0" . 'Webbook\\MainBundle\\Entity\\Book' . "\0" . 'category', '' . "\0" . 'Webbook\\MainBundle\\Entity\\Book' . "\0" . 'blocks', '' . "\0" . 'Webbook\\MainBundle\\Entity\\Book' . "\0" . 'mainAuthors', '' . "\0" . 'Webbook\\MainBundle\\Entity\\Book' . "\0" . 'description', '' . "\0" . 'Webbook\\MainBundle\\Entity\\Book' . "\0" . 'editions', '' . "\0" . 'Webbook\\MainBundle\\Entity\\Book' . "\0" . 'images', '' . "\0" . 'Webbook\\MainBundle\\Entity\\Book' . "\0" . 'published', '' . "\0" . 'Webbook\\MainBundle\\Entity\\Book' . "\0" . 'publishedPreview', '' . "\0" . 'Webbook\\MainBundle\\Entity\\Book' . "\0" . 'publishDate', '' . "\0" . 'Webbook\\MainBundle\\Entity\\Book' . "\0" . 'price', '' . "\0" . 'Webbook\\MainBundle\\Entity\\Book' . "\0" . 'ISBN', '' . "\0" . 'Webbook\\MainBundle\\Entity\\Book' . "\0" . 'language', '' . "\0" . 'Webbook\\MainBundle\\Entity\\Book' . "\0" . 'reviews', 'createdBy', 'updatedBy', 'deletedBy', 'createdAt', 'updatedAt'];
        }

        return ['__isInitialized__', '' . "\0" . 'Webbook\\MainBundle\\Entity\\Book' . "\0" . 'id', '' . "\0" . 'Webbook\\MainBundle\\Entity\\Book' . "\0" . 'title', '' . "\0" . 'Webbook\\MainBundle\\Entity\\Book' . "\0" . 'token', '' . "\0" . 'Webbook\\MainBundle\\Entity\\Book' . "\0" . 'category', '' . "\0" . 'Webbook\\MainBundle\\Entity\\Book' . "\0" . 'blocks', '' . "\0" . 'Webbook\\MainBundle\\Entity\\Book' . "\0" . 'mainAuthors', '' . "\0" . 'Webbook\\MainBundle\\Entity\\Book' . "\0" . 'description', '' . "\0" . 'Webbook\\MainBundle\\Entity\\Book' . "\0" . 'editions', '' . "\0" . 'Webbook\\MainBundle\\Entity\\Book' . "\0" . 'images', '' . "\0" . 'Webbook\\MainBundle\\Entity\\Book' . "\0" . 'published', '' . "\0" . 'Webbook\\MainBundle\\Entity\\Book' . "\0" . 'publishedPreview', '' . "\0" . 'Webbook\\MainBundle\\Entity\\Book' . "\0" . 'publishDate', '' . "\0" . 'Webbook\\MainBundle\\Entity\\Book' . "\0" . 'price', '' . "\0" . 'Webbook\\MainBundle\\Entity\\Book' . "\0" . 'ISBN', '' . "\0" . 'Webbook\\MainBundle\\Entity\\Book' . "\0" . 'language', '' . "\0" . 'Webbook\\MainBundle\\Entity\\Book' . "\0" . 'reviews', 'createdBy', 'updatedBy', 'deletedBy', 'createdAt', 'updatedAt'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Book $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitle($title)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitle', [$title]);

        return parent::setTitle($title);
    }

    /**
     * {@inheritDoc}
     */
    public function getTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitle', []);

        return parent::getTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setToken($token)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setToken', [$token]);

        return parent::setToken($token);
    }

    /**
     * {@inheritDoc}
     */
    public function getToken()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getToken', []);

        return parent::getToken();
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function getCategory()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCategory', []);

        return parent::getCategory();
    }

    /**
     * {@inheritDoc}
     */
    public function setCategory($category)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCategory', [$category]);

        return parent::setCategory($category);
    }

    /**
     * {@inheritDoc}
     */
    public function getPublished()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPublished', []);

        return parent::getPublished();
    }

    /**
     * {@inheritDoc}
     */
    public function setPublished($published)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPublished', [$published]);

        return parent::setPublished($published);
    }

    /**
     * {@inheritDoc}
     */
    public function getBlocks()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBlocks', []);

        return parent::getBlocks();
    }

    /**
     * {@inheritDoc}
     */
    public function getUnderBlock()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUnderBlock', []);

        return parent::getUnderBlock();
    }

    /**
     * {@inheritDoc}
     */
    public function setBlocks($blocks)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBlocks', [$blocks]);

        return parent::setBlocks($blocks);
    }

    /**
     * {@inheritDoc}
     */
    public function addBlock($block)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addBlock', [$block]);

        return parent::addBlock($block);
    }

    /**
     * {@inheritDoc}
     */
    public function removeBlock($child)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeBlock', [$child]);

        return parent::removeBlock($child);
    }

    /**
     * {@inheritDoc}
     */
    public function getMainAuthors()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMainAuthors', []);

        return parent::getMainAuthors();
    }

    /**
     * {@inheritDoc}
     */
    public function setMainAuthors($mainAuthors)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMainAuthors', [$mainAuthors]);

        return parent::setMainAuthors($mainAuthors);
    }

    /**
     * {@inheritDoc}
     */
    public function getSlug()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSlug', []);

        return parent::getSlug();
    }

    /**
     * {@inheritDoc}
     */
    public function getImages()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImages', []);

        return parent::getImages();
    }

    /**
     * {@inheritDoc}
     */
    public function setImages($images)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImages', [$images]);

        return parent::setImages($images);
    }

    /**
     * {@inheritDoc}
     */
    public function addImage($media)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addImage', [$media]);

        return parent::addImage($media);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', []);

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', [$description]);

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getPublishDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPublishDate', []);

        return parent::getPublishDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setPublishDate($publishDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPublishDate', [$publishDate]);

        return parent::setPublishDate($publishDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrice()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrice', []);

        return parent::getPrice();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrice($price)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrice', [$price]);

        return parent::setPrice($price);
    }

    /**
     * {@inheritDoc}
     */
    public function getISBN()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getISBN', []);

        return parent::getISBN();
    }

    /**
     * {@inheritDoc}
     */
    public function setISBN($ISBN)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setISBN', [$ISBN]);

        return parent::setISBN($ISBN);
    }

    /**
     * {@inheritDoc}
     */
    public function getLanguage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLanguage', []);

        return parent::getLanguage();
    }

    /**
     * {@inheritDoc}
     */
    public function setLanguage($language)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLanguage', [$language]);

        return parent::setLanguage($language);
    }

    /**
     * {@inheritDoc}
     */
    public function getReviews()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReviews', []);

        return parent::getReviews();
    }

    /**
     * {@inheritDoc}
     */
    public function addReview(\Webbook\MainBundle\Entity\BookReview $review)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addReview', [$review]);

        return parent::addReview($review);
    }

    /**
     * {@inheritDoc}
     */
    public function setReviews($reviews)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setReviews', [$reviews]);

        return parent::setReviews($reviews);
    }

    /**
     * {@inheritDoc}
     */
    public function getEditions()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEditions', []);

        return parent::getEditions();
    }

    /**
     * {@inheritDoc}
     */
    public function setEditions($editions)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEditions', [$editions]);

        return parent::setEditions($editions);
    }

    /**
     * {@inheritDoc}
     */
    public function addEdition($edition)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addEdition', [$edition]);

        return parent::addEdition($edition);
    }

    /**
     * {@inheritDoc}
     */
    public function getActivatedEdition()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getActivatedEdition', []);

        return parent::getActivatedEdition();
    }

    /**
     * {@inheritDoc}
     */
    public function isPublishedPreview()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isPublishedPreview', []);

        return parent::isPublishedPreview();
    }

    /**
     * {@inheritDoc}
     */
    public function setPublishedPreview($publishedPreview)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPublishedPreview', [$publishedPreview]);

        return parent::setPublishedPreview($publishedPreview);
    }

    /**
     * {@inheritDoc}
     */
    public function getPublishedEdition()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPublishedEdition', []);

        return parent::getPublishedEdition();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedBy($user)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedBy', [$user]);

        return parent::setCreatedBy($user);
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedBy($user)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedBy', [$user]);

        return parent::setUpdatedBy($user);
    }

    /**
     * {@inheritDoc}
     */
    public function setDeletedBy($user)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDeletedBy', [$user]);

        return parent::setDeletedBy($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedBy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedBy', []);

        return parent::getCreatedBy();
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedBy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedBy', []);

        return parent::getUpdatedBy();
    }

    /**
     * {@inheritDoc}
     */
    public function getDeletedBy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDeletedBy', []);

        return parent::getDeletedBy();
    }

    /**
     * {@inheritDoc}
     */
    public function isBlameable()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isBlameable', []);

        return parent::isBlameable();
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', []);

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedAt', []);

        return parent::getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt(\DateTime $createdAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', [$createdAt]);

        return parent::setCreatedAt($createdAt);
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedAt(\DateTime $updatedAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedAt', [$updatedAt]);

        return parent::setUpdatedAt($updatedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function updateTimestamps()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'updateTimestamps', []);

        return parent::updateTimestamps();
    }

}
